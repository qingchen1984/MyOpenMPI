# Makefile.in generated by automake 1.10 from Makefile.am.
# vtlib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/VampirTrace
pkglibdir = $(libdir)/VampirTrace
pkgincludedir = $(includedir)/VampirTrace
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = vtlib
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/acinclude.compinst.m4 \
	$(top_srcdir)/m4/acinclude.compwrap.m4 \
	$(top_srcdir)/m4/acinclude.conf.m4 \
	$(top_srcdir)/m4/acinclude.cross.m4 \
	$(top_srcdir)/m4/acinclude.dl.m4 \
	$(top_srcdir)/m4/acinclude.dyninst.m4 \
	$(top_srcdir)/m4/acinclude.iowrap.m4 \
	$(top_srcdir)/m4/acinclude.ldshflag.m4 \
	$(top_srcdir)/m4/acinclude.ltmpdir.m4 \
	$(top_srcdir)/m4/acinclude.memhooks.m4 \
	$(top_srcdir)/m4/acinclude.mpi.m4 \
	$(top_srcdir)/m4/acinclude.nm.m4 \
	$(top_srcdir)/m4/acinclude.omp.m4 \
	$(top_srcdir)/m4/acinclude.otf.m4 \
	$(top_srcdir)/m4/acinclude.papi.m4 \
	$(top_srcdir)/m4/acinclude.pform.m4 \
	$(top_srcdir)/m4/acinclude.zlib.m4 \
	$(top_srcdir)/m4/autoconf-archive/ax_openmp.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libvt_a_AR = $(AR) $(ARFLAGS)
libvt_a_DEPENDENCIES = $(top_builddir)/util/util.$(OBJEXT) \
	$(top_builddir)/util/installdirs.$(OBJEXT)
am__libvt_a_SOURCES_DIST = rfg.h rfg_filter.h rfg_groups.h \
	rfg_regions.h rfg_strmkrs.h vt_comp.h vt_defs.h vt_env.h \
	vt_error.h vt_fbindings.h vt_inttypes.h vt_iowrap.h \
	vt_iowrap_helper.h vt_memhook.h vt_memreg.h vt_metric.h \
	vt_mpicom.h vt_mpireg.h vt_mpireq.h vt_omplock.h vt_ompreg.h \
	vt_otf_gen.h vt_otf_sum.h vt_pform.h vt_pomp.h vt_sync.h \
	vt_thrd.h vt_trc.h vt_comp_gnu.c vt_comp_pgi.c vt_comp_phat.c \
	vt_comp_xl.c vt_comp_ftrace.c vt_comp_ftrace_1.s \
	vt_comp_dyninst.c vt_memhook.c vt_memreg.c vt_iowrap.c \
	vt_iowrap_helper.c vt_metric_papi.c rfg_regions.c rfg_filter.c \
	rfg_groups.c vt_env.c vt_error.c vt_metmap.c vt_otf_gen.c \
	vt_otf_sum.c vt_otf_trc.c vt_pform_linux.c vt_pomp_base.c \
	vt_thrd.c vt_user_comment.c vt_user_count.c vt_user_region.c \
	$(OPARILIBDIR)/pomp_fwrapper_base.c
am__objects_1 =
am__objects_2 = vt_comp_gnu.$(OBJEXT)
#am__objects_3 = vt_comp_gnu.$(OBJEXT)
#am__objects_4 = vt_comp_pgi.$(OBJEXT)
#am__objects_5 = vt_comp_phat.$(OBJEXT)
#am__objects_6 = vt_comp_xl.$(OBJEXT)
#am__objects_7 = vt_comp_ftrace.$(OBJEXT) \
#	vt_comp_ftrace_1.$(OBJEXT)
am__objects_8 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7)
#am__objects_9 = vt_comp_dyninst.$(OBJEXT)
am__objects_10 = vt_memhook.$(OBJEXT) \
	vt_memreg.$(OBJEXT)
am__objects_11 = vt_iowrap.$(OBJEXT) \
	vt_iowrap_helper.$(OBJEXT)
#am__objects_12 = vt_metric_papi.$(OBJEXT)
am__objects_13 = rfg_regions.$(OBJEXT) rfg_filter.$(OBJEXT) \
	rfg_groups.$(OBJEXT)
am__objects_14 = $(am__objects_1) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10) $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) vt_env.$(OBJEXT) vt_error.$(OBJEXT) \
	vt_metmap.$(OBJEXT) vt_otf_gen.$(OBJEXT) vt_otf_sum.$(OBJEXT) \
	vt_otf_trc.$(OBJEXT) vt_pform_linux.$(OBJEXT) \
	vt_pomp_base.$(OBJEXT) vt_thrd.$(OBJEXT) \
	vt_user_comment.$(OBJEXT) vt_user_count.$(OBJEXT) \
	vt_user_region.$(OBJEXT)
am_libvt_a_OBJECTS = $(am__objects_14) pomp_fwrapper_base.$(OBJEXT)
libvt_a_OBJECTS = $(am_libvt_a_OBJECTS)
libvt_fmpi_a_AR = $(AR) $(ARFLAGS)
libvt_fmpi_a_LIBADD =
am_libvt_fmpi_a_OBJECTS = libvt_fmpi_a-vt_fmpiwrap.$(OBJEXT)
libvt_fmpi_a_OBJECTS = $(am_libvt_fmpi_a_OBJECTS)
libvt_mpi_a_AR = $(AR) $(ARFLAGS)
libvt_mpi_a_DEPENDENCIES = pomp_fwrapper_base.$(OBJEXT) \
	$(top_builddir)/util/util.$(OBJEXT) \
	$(top_builddir)/util/installdirs.$(OBJEXT)
am__libvt_mpi_a_SOURCES_DIST = rfg.h rfg_filter.h rfg_groups.h \
	rfg_regions.h rfg_strmkrs.h vt_comp.h vt_defs.h vt_env.h \
	vt_error.h vt_fbindings.h vt_inttypes.h vt_iowrap.h \
	vt_iowrap_helper.h vt_memhook.h vt_memreg.h vt_metric.h \
	vt_mpicom.h vt_mpireg.h vt_mpireq.h vt_omplock.h vt_ompreg.h \
	vt_otf_gen.h vt_otf_sum.h vt_pform.h vt_pomp.h vt_sync.h \
	vt_thrd.h vt_trc.h vt_comp_gnu.c vt_comp_pgi.c vt_comp_phat.c \
	vt_comp_xl.c vt_comp_ftrace.c vt_comp_ftrace_1.s \
	vt_comp_dyninst.c vt_memhook.c vt_memreg.c vt_iowrap.c \
	vt_iowrap_helper.c vt_metric_papi.c rfg_regions.c rfg_filter.c \
	rfg_groups.c vt_env.c vt_error.c vt_metmap.c vt_otf_gen.c \
	vt_otf_sum.c vt_otf_trc.c vt_pform_linux.c vt_pomp_base.c \
	vt_thrd.c vt_user_comment.c vt_user_count.c vt_user_region.c \
	vt_mpicom.c vt_mpireg.c vt_mpireq.c vt_mpiwrap.c vt_sync.c
am__objects_15 =  \
	libvt_mpi_a-vt_comp_gnu.$(OBJEXT)
#am__objects_16 =  \
#	libvt_mpi_a-vt_comp_gnu.$(OBJEXT)
#am__objects_17 =  \
#	libvt_mpi_a-vt_comp_pgi.$(OBJEXT)
#am__objects_18 =  \
#	libvt_mpi_a-vt_comp_phat.$(OBJEXT)
#am__objects_19 =  \
#	libvt_mpi_a-vt_comp_xl.$(OBJEXT)
#am__objects_20 = libvt_mpi_a-vt_comp_ftrace.$(OBJEXT) \
#	vt_comp_ftrace_1.$(OBJEXT)
am__objects_21 = $(am__objects_15) $(am__objects_16) $(am__objects_17) \
	$(am__objects_18) $(am__objects_19) $(am__objects_20)
#am__objects_22 =  \
#	libvt_mpi_a-vt_comp_dyninst.$(OBJEXT)
am__objects_23 =  \
	libvt_mpi_a-vt_memhook.$(OBJEXT) \
	libvt_mpi_a-vt_memreg.$(OBJEXT)
am__objects_24 = libvt_mpi_a-vt_iowrap.$(OBJEXT) \
	libvt_mpi_a-vt_iowrap_helper.$(OBJEXT)
#am__objects_25 =  \
#	libvt_mpi_a-vt_metric_papi.$(OBJEXT)
am__objects_26 = libvt_mpi_a-rfg_regions.$(OBJEXT) \
	libvt_mpi_a-rfg_filter.$(OBJEXT) \
	libvt_mpi_a-rfg_groups.$(OBJEXT)
am__objects_27 = $(am__objects_1) $(am__objects_21) $(am__objects_22) \
	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
	$(am__objects_26) libvt_mpi_a-vt_env.$(OBJEXT) \
	libvt_mpi_a-vt_error.$(OBJEXT) libvt_mpi_a-vt_metmap.$(OBJEXT) \
	libvt_mpi_a-vt_otf_gen.$(OBJEXT) \
	libvt_mpi_a-vt_otf_sum.$(OBJEXT) \
	libvt_mpi_a-vt_otf_trc.$(OBJEXT) \
	libvt_mpi_a-vt_pform_linux.$(OBJEXT) \
	libvt_mpi_a-vt_pomp_base.$(OBJEXT) \
	libvt_mpi_a-vt_thrd.$(OBJEXT) \
	libvt_mpi_a-vt_user_comment.$(OBJEXT) \
	libvt_mpi_a-vt_user_count.$(OBJEXT) \
	libvt_mpi_a-vt_user_region.$(OBJEXT)
am__objects_28 = libvt_mpi_a-vt_mpicom.$(OBJEXT) \
	libvt_mpi_a-vt_mpireg.$(OBJEXT) \
	libvt_mpi_a-vt_mpireq.$(OBJEXT) \
	libvt_mpi_a-vt_mpiwrap.$(OBJEXT) libvt_mpi_a-vt_sync.$(OBJEXT)
am_libvt_mpi_a_OBJECTS = $(am__objects_27) $(am__objects_28)
libvt_mpi_a_OBJECTS = $(am_libvt_mpi_a_OBJECTS)
libvt_omp_a_AR = $(AR) $(ARFLAGS)
libvt_omp_a_DEPENDENCIES = pomp_fwrapper_base.$(OBJEXT) \
	$(top_builddir)/util/util.$(OBJEXT) \
	$(top_builddir)/util/installdirs.$(OBJEXT)
am__libvt_omp_a_SOURCES_DIST = rfg.h rfg_filter.h rfg_groups.h \
	rfg_regions.h rfg_strmkrs.h vt_comp.h vt_defs.h vt_env.h \
	vt_error.h vt_fbindings.h vt_inttypes.h vt_iowrap.h \
	vt_iowrap_helper.h vt_memhook.h vt_memreg.h vt_metric.h \
	vt_mpicom.h vt_mpireg.h vt_mpireq.h vt_omplock.h vt_ompreg.h \
	vt_otf_gen.h vt_otf_sum.h vt_pform.h vt_pomp.h vt_sync.h \
	vt_thrd.h vt_trc.h vt_comp_gnu.c vt_comp_pgi.c vt_comp_phat.c \
	vt_comp_xl.c vt_comp_ftrace.c vt_comp_ftrace_1.s \
	vt_comp_dyninst.c vt_memhook.c vt_memreg.c vt_iowrap.c \
	vt_iowrap_helper.c vt_metric_papi.c rfg_regions.c rfg_filter.c \
	rfg_groups.c vt_env.c vt_error.c vt_metmap.c vt_otf_gen.c \
	vt_otf_sum.c vt_otf_trc.c vt_pform_linux.c vt_pomp_base.c \
	vt_thrd.c vt_user_comment.c vt_user_count.c vt_user_region.c \
	vt_omplock.c vt_ompreg.c vt_pomp.c \
	$(OPARILIBDIR)/pomp_fwrapper.c
am__objects_29 =  \
	libvt_omp_a-vt_comp_gnu.$(OBJEXT)
#am__objects_30 =  \
#	libvt_omp_a-vt_comp_gnu.$(OBJEXT)
#am__objects_31 =  \
#	libvt_omp_a-vt_comp_pgi.$(OBJEXT)
#am__objects_32 =  \
#	libvt_omp_a-vt_comp_phat.$(OBJEXT)
#am__objects_33 =  \
#	libvt_omp_a-vt_comp_xl.$(OBJEXT)
#am__objects_34 = libvt_omp_a-vt_comp_ftrace.$(OBJEXT) \
#	vt_comp_ftrace_1.$(OBJEXT)
am__objects_35 = $(am__objects_29) $(am__objects_30) $(am__objects_31) \
	$(am__objects_32) $(am__objects_33) $(am__objects_34)
#am__objects_36 =  \
#	libvt_omp_a-vt_comp_dyninst.$(OBJEXT)
am__objects_37 =  \
	libvt_omp_a-vt_memhook.$(OBJEXT) \
	libvt_omp_a-vt_memreg.$(OBJEXT)
am__objects_38 = libvt_omp_a-vt_iowrap.$(OBJEXT) \
	libvt_omp_a-vt_iowrap_helper.$(OBJEXT)
#am__objects_39 =  \
#	libvt_omp_a-vt_metric_papi.$(OBJEXT)
am__objects_40 = libvt_omp_a-rfg_regions.$(OBJEXT) \
	libvt_omp_a-rfg_filter.$(OBJEXT) \
	libvt_omp_a-rfg_groups.$(OBJEXT)
am__objects_41 = $(am__objects_1) $(am__objects_35) $(am__objects_36) \
	$(am__objects_37) $(am__objects_38) $(am__objects_39) \
	$(am__objects_40) libvt_omp_a-vt_env.$(OBJEXT) \
	libvt_omp_a-vt_error.$(OBJEXT) libvt_omp_a-vt_metmap.$(OBJEXT) \
	libvt_omp_a-vt_otf_gen.$(OBJEXT) \
	libvt_omp_a-vt_otf_sum.$(OBJEXT) \
	libvt_omp_a-vt_otf_trc.$(OBJEXT) \
	libvt_omp_a-vt_pform_linux.$(OBJEXT) \
	libvt_omp_a-vt_pomp_base.$(OBJEXT) \
	libvt_omp_a-vt_thrd.$(OBJEXT) \
	libvt_omp_a-vt_user_comment.$(OBJEXT) \
	libvt_omp_a-vt_user_count.$(OBJEXT) \
	libvt_omp_a-vt_user_region.$(OBJEXT)
am__objects_42 = libvt_omp_a-vt_omplock.$(OBJEXT) \
	libvt_omp_a-vt_ompreg.$(OBJEXT) libvt_omp_a-vt_pomp.$(OBJEXT) \
	libvt_omp_a-pomp_fwrapper.$(OBJEXT)
am_libvt_omp_a_OBJECTS = $(am__objects_41) $(am__objects_42)
libvt_omp_a_OBJECTS = $(am_libvt_omp_a_OBJECTS)
libvt_ompi_a_AR = $(AR) $(ARFLAGS)
libvt_ompi_a_DEPENDENCIES = pomp_fwrapper_base.$(OBJEXT) \
	$(top_builddir)/util/util.$(OBJEXT) \
	$(top_builddir)/util/installdirs.$(OBJEXT)
am__libvt_ompi_a_SOURCES_DIST = rfg.h rfg_filter.h rfg_groups.h \
	rfg_regions.h rfg_strmkrs.h vt_comp.h vt_defs.h vt_env.h \
	vt_error.h vt_fbindings.h vt_inttypes.h vt_iowrap.h \
	vt_iowrap_helper.h vt_memhook.h vt_memreg.h vt_metric.h \
	vt_mpicom.h vt_mpireg.h vt_mpireq.h vt_omplock.h vt_ompreg.h \
	vt_otf_gen.h vt_otf_sum.h vt_pform.h vt_pomp.h vt_sync.h \
	vt_thrd.h vt_trc.h vt_comp_gnu.c vt_comp_pgi.c vt_comp_phat.c \
	vt_comp_xl.c vt_comp_ftrace.c vt_comp_ftrace_1.s \
	vt_comp_dyninst.c vt_memhook.c vt_memreg.c vt_iowrap.c \
	vt_iowrap_helper.c vt_metric_papi.c rfg_regions.c rfg_filter.c \
	rfg_groups.c vt_env.c vt_error.c vt_metmap.c vt_otf_gen.c \
	vt_otf_sum.c vt_otf_trc.c vt_pform_linux.c vt_pomp_base.c \
	vt_thrd.c vt_user_comment.c vt_user_count.c vt_user_region.c \
	vt_mpicom.c vt_mpireg.c vt_mpireq.c vt_mpiwrap.c vt_sync.c \
	vt_omplock.c vt_ompreg.c vt_pomp.c \
	$(OPARILIBDIR)/pomp_fwrapper.c
am__objects_43 =  \
	libvt_ompi_a-vt_comp_gnu.$(OBJEXT)
#am__objects_44 = libvt_ompi_a-vt_comp_gnu.$(OBJEXT)
#am__objects_45 =  \
#	libvt_ompi_a-vt_comp_pgi.$(OBJEXT)
#am__objects_46 = libvt_ompi_a-vt_comp_phat.$(OBJEXT)
#am__objects_47 =  \
#	libvt_ompi_a-vt_comp_xl.$(OBJEXT)
#am__objects_48 = libvt_ompi_a-vt_comp_ftrace.$(OBJEXT) \
#	vt_comp_ftrace_1.$(OBJEXT)
am__objects_49 = $(am__objects_43) $(am__objects_44) $(am__objects_45) \
	$(am__objects_46) $(am__objects_47) $(am__objects_48)
#am__objects_50 =  \
#	libvt_ompi_a-vt_comp_dyninst.$(OBJEXT)
am__objects_51 =  \
	libvt_ompi_a-vt_memhook.$(OBJEXT) \
	libvt_ompi_a-vt_memreg.$(OBJEXT)
am__objects_52 = libvt_ompi_a-vt_iowrap.$(OBJEXT) \
	libvt_ompi_a-vt_iowrap_helper.$(OBJEXT)
#am__objects_53 =  \
#	libvt_ompi_a-vt_metric_papi.$(OBJEXT)
am__objects_54 = libvt_ompi_a-rfg_regions.$(OBJEXT) \
	libvt_ompi_a-rfg_filter.$(OBJEXT) \
	libvt_ompi_a-rfg_groups.$(OBJEXT)
am__objects_55 = $(am__objects_1) $(am__objects_49) $(am__objects_50) \
	$(am__objects_51) $(am__objects_52) $(am__objects_53) \
	$(am__objects_54) libvt_ompi_a-vt_env.$(OBJEXT) \
	libvt_ompi_a-vt_error.$(OBJEXT) \
	libvt_ompi_a-vt_metmap.$(OBJEXT) \
	libvt_ompi_a-vt_otf_gen.$(OBJEXT) \
	libvt_ompi_a-vt_otf_sum.$(OBJEXT) \
	libvt_ompi_a-vt_otf_trc.$(OBJEXT) \
	libvt_ompi_a-vt_pform_linux.$(OBJEXT) \
	libvt_ompi_a-vt_pomp_base.$(OBJEXT) \
	libvt_ompi_a-vt_thrd.$(OBJEXT) \
	libvt_ompi_a-vt_user_comment.$(OBJEXT) \
	libvt_ompi_a-vt_user_count.$(OBJEXT) \
	libvt_ompi_a-vt_user_region.$(OBJEXT)
am__objects_56 = libvt_ompi_a-vt_mpicom.$(OBJEXT) \
	libvt_ompi_a-vt_mpireg.$(OBJEXT) \
	libvt_ompi_a-vt_mpireq.$(OBJEXT) \
	libvt_ompi_a-vt_mpiwrap.$(OBJEXT) \
	libvt_ompi_a-vt_sync.$(OBJEXT)
am__objects_57 = libvt_ompi_a-vt_omplock.$(OBJEXT) \
	libvt_ompi_a-vt_ompreg.$(OBJEXT) \
	libvt_ompi_a-vt_pomp.$(OBJEXT) \
	libvt_ompi_a-pomp_fwrapper.$(OBJEXT)
am__objects_58 = $(am__objects_56) $(am__objects_57)
am_libvt_ompi_a_OBJECTS = $(am__objects_55) $(am__objects_58)
libvt_ompi_a_OBJECTS = $(am_libvt_ompi_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCCASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
SOURCES = $(libvt_a_SOURCES) $(libvt_fmpi_a_SOURCES) \
	$(libvt_mpi_a_SOURCES) $(libvt_omp_a_SOURCES) \
	$(libvt_ompi_a_SOURCES)
DIST_SOURCES = $(am__libvt_a_SOURCES_DIST) $(libvt_fmpi_a_SOURCES) \
	$(am__libvt_mpi_a_SOURCES_DIST) \
	$(am__libvt_omp_a_SOURCES_DIST) \
	$(am__libvt_ompi_a_SOURCES_DIST)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run aclocal-1.10
AMTAR = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run autoconf
AUTOHEADER = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run autoheader
AUTOMAKE = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run automake-1.10
AWK = gawk
CC = $(MPICC)
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -finline-functions -fno-strict-aliasing -pthread -fvisibility=hidden
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -finline-functions -fno-strict-aliasing -pthread -fvisibility=hidden
CFLAGS_FOR_BUILD = -g -finline-functions -fno-strict-aliasing -pthread -fvisibility=hidden
CPP = gcc -E
CPPFLAGS = -DINSIDE_OPENMPI   -D_GNU_SOURCE
CPPFLAGS_FOR_BUILD =  
CPP_FOR_BUILD = gcc -E
CXX = g++
CXXCPP = g++ -E
CXXCPP_FOR_BUILD = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -finline-functions -pthread
CXXFLAGS_FOR_BUILD = -g -finline-functions -pthread
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLINCDIR = 
DLLIB = -ldl
DLLIBDIR = 
DSYMUTIL = 
DUMPBIN = 
DYNIINCDIR = 
DYNILIB = 
DYNILIBDIR = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FC = 
FCFLAGS = 
FFLAGS = 
FGREP = /bin/grep -F
FMPILIB = -lvt.fmpi
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS =  
LDFLAGS_FOR_BUILD =  
LDSHFLAG = 
LIBOBJS = 
LIBS = -lnsl -lutil  -lm 
LIBS_FOR_BUILD = -lnsl -lutil  -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MPICC = gcc
MPICFLAGS = 
MPIDIR = 
MPIINCDIR = -I/root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/../../../include
MPILIB = -lmpi
MPILIBDIR = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OMPFLAG = -fopenmp
OTFDIR = 
OTFINCDIR = 
OTFLIB = -lotf  -lz
OTFLIBDIR = 
OTOOL = 
OTOOL64 = 
PACKAGE = VampirTrace
PACKAGE_BUGREPORT = vampirsupport@zih.tu-dresden.de
PACKAGE_NAME = VampirTrace
PACKAGE_STRING = VampirTrace 5.4.12
PACKAGE_TARNAME = vampirtrace
PACKAGE_VERSION = 5.4.12
PAPIINCDIR = 
PAPILIB = 
PAPILIBDIR = 
PATH_SEPARATOR = :
PLATFORM = linux
PMPILIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 5.4.12
VTDYNATTLIB = 
VT_WRAPPER_AVAIL_INST = manual pomp gnu
VT_WRAPPER_DEFAULT_INST = gnu
VT_WRAPPER_EXTRA_CFLAGS = 
VT_WRAPPER_EXTRA_CXXFLAGS = 
VT_WRAPPER_EXTRA_FCFLAGS = 
VT_WRAPPER_EXTRA_FFLAGS = 
VT_WRAPPER_EXTRA_LDFLAGS = 
VT_WRAPPER_EXTRA_LIBS = 
VT_WRAPPER_OPARI_BIN = /home/robertorp/packages/openmpi-1.4.2/bin/opari
ZLIBINCDIR = 
ZLIBLIB = -lz
ZLIBLIBDIR = 
abs_builddir = /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/vtlib
abs_srcdir = /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/vtlib
abs_top_builddir = /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt
abs_top_srcdir = /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share/vampirtrace
docdir = ${datarootdir}/doc
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include/vampirtrace
infodir = ${datarootdir}/info
install_sh = $(SHELL) /root/Roberto/UNLP/Especializacion/robertorp/src/openmpi-1.4.2/ompi/contrib/vt/vt/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/robertorp/packages/openmpi-1.4.2
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
#VTMPILIB = 
VTMPILIB = libvt.mpi.a libvt.fmpi.a
#VTOMPLIB = 
VTOMPLIB = libvt.omp.a
#VTHYBLIB = 
VTHYBLIB = libvt.ompi.a
lib_LIBRARIES = libvt.a $(VTMPILIB) $(VTOMPLIB) $(VTHYBLIB)
OPARILIBDIR = $(top_builddir)/tools/opari/lib
OPARIINCLUDE = -I$(top_srcdir)/tools/opari/lib
OTFINCLUDE = -I$(top_srcdir)/extlib/otf/otflib -I$(top_builddir)/extlib/otf/otflib
#OTFINCLUDE = $(OTFINCDIR)
#MEMHOOKSOURCES = 
MEMHOOKSOURCES = vt_memhook.c vt_memreg.c
#MEMHOOKCFLAGS = 
MEMHOOKCFLAGS = -DVT_MEMHOOK
#IOWRAPSOURCES = 
IOWRAPSOURCES = vt_iowrap.c vt_iowrap_helper.c
#IOWRAPCFLAGS = 
IOWRAPCFLAGS = -DVT_IOWRAP
METRINCLUDE = 
#METRINCLUDE = $(PAPIINCDIR)
METRSOURCES = 
#METRSOURCES = vt_metric_papi.c
METRCFLAGS = 
#METRCFLAGS = -DVT_METR
#COMPGNUSOURCES = 
COMPGNUSOURCES = vt_comp_gnu.c
COMPINTELSOURCES = 
#COMPINTELSOURCES = vt_comp_gnu.c
COMPPGISOURCES = 
#COMPPGISOURCES = vt_comp_pgi.c
COMPPHATSOURCES = 
#COMPPHATSOURCES = vt_comp_phat.c
COMPXLSOURCES = 
#COMPXLSOURCES = vt_comp_xl.c
COMPFTRACESOURCES = 
#COMPFTRACESOURCES = vt_comp_ftrace.c vt_comp_ftrace_1.s
COMPSOURCES = $(COMPGNUSOURCES) $(COMPINTELSOURCES) \
              $(COMPPGISOURCES) $(COMPPHATSOURCES) $(COMPXLSOURCES) \
              $(COMPHITACHISOURCES) $(COMPFTRACESOURCES)

DYNISOURCES = 
#DYNISOURCES = vt_comp_dyninst.c
INCLUDES = $(OPARIINCLUDE) $(OTFINCLUDE) $(METRINCLUDE)
include_HEADERS = \
	vt_user.h \
	vt_user.inc \
	vt_user_comment.h \
	vt_user_comment.inc \
	vt_user_count.h \
	vt_user_count.inc

RFGCFLAGS = -DRFG
RFGSOURCES = \
	rfg_regions.c \
	rfg_filter.c \
	rfg_groups.c

RFGHEADERS = \
	rfg.h \
	rfg_filter.h \
	rfg_groups.h \
	rfg_regions.h \
	rfg_strmkrs.h

VT_COMMON_SOURCES = \
	$(RFGHEADERS) \
	vt_comp.h \
	vt_defs.h \
	vt_env.h \
	vt_error.h \
	vt_fbindings.h \
	vt_inttypes.h \
	vt_iowrap.h \
	vt_iowrap_helper.h \
	vt_memhook.h \
	vt_memreg.h \
	vt_metric.h \
	vt_mpicom.h \
	vt_mpireg.h \
	vt_mpireq.h \
	vt_omplock.h \
	vt_ompreg.h \
	vt_otf_gen.h \
	vt_otf_sum.h \
	vt_pform.h \
	vt_pomp.h \
	vt_sync.h \
	vt_thrd.h \
	vt_trc.h \
	$(COMPSOURCES) \
	$(DYNISOURCES) \
	$(MEMHOOKSOURCES) \
	$(IOWRAPSOURCES) \
	$(METRSOURCES) \
	$(RFGSOURCES) \
	vt_env.c \
	vt_error.c \
	vt_metmap.c \
	vt_otf_gen.c \
	vt_otf_sum.c \
	vt_otf_trc.c \
	vt_pform_linux.c \
	vt_pomp_base.c \
	vt_thrd.c \
	vt_user_comment.c \
	vt_user_count.c \
	vt_user_region.c

VT_MPI_SOURCES = \
	vt_mpicom.c \
	vt_mpireg.c \
	vt_mpireq.c \
	vt_mpiwrap.c \
	vt_sync.c

VT_OMP_SOURCES = \
	vt_omplock.c \
	vt_ompreg.c \
	vt_pomp.c \
	$(OPARILIBDIR)/pomp_fwrapper.c

VT_HYB_SOURCES = \
	$(VT_MPI_SOURCES) \
	$(VT_OMP_SOURCES)

AM_CFLAGS = $(RFGCFLAGS) $(MEMHOOKCFLAGS) $(IOWRAPCFLAGS) $(METRCFLAGS)
libvt_a_LIBADD = $(top_builddir)/util/util.$(OBJEXT) $(top_builddir)/util/installdirs.$(OBJEXT)
libvt_a_SOURCES = \
	$(VT_COMMON_SOURCES) \
	$(OPARILIBDIR)/pomp_fwrapper_base.c

libvt_mpi_a_CFLAGS = -DVT_MPI $(AM_CFLAGS) $(MPICFLAGS) $(MPIINCDIR)
libvt_mpi_a_LIBADD = pomp_fwrapper_base.$(OBJEXT) $(top_builddir)/util/util.$(OBJEXT) $(top_builddir)/util/installdirs.$(OBJEXT)
libvt_mpi_a_SOURCES = \
	$(VT_COMMON_SOURCES) \
	$(VT_MPI_SOURCES)

libvt_omp_a_CFLAGS = $(OMPFLAG) -DVT_OMP $(AM_CFLAGS)
libvt_omp_a_LIBADD = pomp_fwrapper_base.$(OBJEXT) $(top_builddir)/util/util.$(OBJEXT) $(top_builddir)/util/installdirs.$(OBJEXT)
libvt_omp_a_SOURCES = \
	$(VT_COMMON_SOURCES) \
	$(VT_OMP_SOURCES)

libvt_ompi_a_CFLAGS = $(OMPFLAG) -DVT_OMPI $(AM_CFLAGS) $(MPICFLAGS) $(MPIINCDIR)
libvt_ompi_a_LIBADD = pomp_fwrapper_base.$(OBJEXT) $(top_builddir)/util/util.$(OBJEXT) $(top_builddir)/util/installdirs.$(OBJEXT)
libvt_ompi_a_SOURCES = \
	$(VT_COMMON_SOURCES) \
	$(VT_HYB_SOURCES)

libvt_fmpi_a_CFLAGS = $(AM_CFLAGS) $(MPICFLAGS) $(MPIINCDIR)
libvt_fmpi_a_SOURCES = vt_fmpiwrap.c
EXTRA_DIST = \
	vt_pform_altix.c \
	vt_pform_bgl.c \
	vt_pform_crayt3e.c \
	vt_pform_crayx1.c \
	vt_pform_crayxt.c \
	vt_pform_generic.c \
	vt_pform_ibm.c \
	vt_pform_linux.c \
	vt_pform_macos.c \
	vt_pform_necsx.c \
	vt_pform_origin.c \
	vt_pform_sun.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj .s
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  vtlib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  vtlib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libvt.a: $(libvt_a_OBJECTS) $(libvt_a_DEPENDENCIES) 
	-rm -f libvt.a
	$(libvt_a_AR) libvt.a $(libvt_a_OBJECTS) $(libvt_a_LIBADD)
	$(RANLIB) libvt.a
libvt.fmpi.a: $(libvt_fmpi_a_OBJECTS) $(libvt_fmpi_a_DEPENDENCIES) 
	-rm -f libvt.fmpi.a
	$(libvt_fmpi_a_AR) libvt.fmpi.a $(libvt_fmpi_a_OBJECTS) $(libvt_fmpi_a_LIBADD)
	$(RANLIB) libvt.fmpi.a
libvt.mpi.a: $(libvt_mpi_a_OBJECTS) $(libvt_mpi_a_DEPENDENCIES) 
	-rm -f libvt.mpi.a
	$(libvt_mpi_a_AR) libvt.mpi.a $(libvt_mpi_a_OBJECTS) $(libvt_mpi_a_LIBADD)
	$(RANLIB) libvt.mpi.a
libvt.omp.a: $(libvt_omp_a_OBJECTS) $(libvt_omp_a_DEPENDENCIES) 
	-rm -f libvt.omp.a
	$(libvt_omp_a_AR) libvt.omp.a $(libvt_omp_a_OBJECTS) $(libvt_omp_a_LIBADD)
	$(RANLIB) libvt.omp.a
libvt.ompi.a: $(libvt_ompi_a_OBJECTS) $(libvt_ompi_a_DEPENDENCIES) 
	-rm -f libvt.ompi.a
	$(libvt_ompi_a_AR) libvt.ompi.a $(libvt_ompi_a_OBJECTS) $(libvt_ompi_a_LIBADD)
	$(RANLIB) libvt.ompi.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Po
include ./$(DEPDIR)/libvt_mpi_a-rfg_filter.Po
include ./$(DEPDIR)/libvt_mpi_a-rfg_groups.Po
include ./$(DEPDIR)/libvt_mpi_a-rfg_regions.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_phat.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_comp_xl.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_env.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_error.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_iowrap.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_memhook.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_memreg.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_metmap.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_metric_papi.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_mpicom.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_mpireg.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_mpireq.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_otf_gen.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_otf_sum.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_otf_trc.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_pform_linux.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_pomp_base.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_sync.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_thrd.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_user_comment.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_user_count.Po
include ./$(DEPDIR)/libvt_mpi_a-vt_user_region.Po
include ./$(DEPDIR)/libvt_omp_a-pomp_fwrapper.Po
include ./$(DEPDIR)/libvt_omp_a-rfg_filter.Po
include ./$(DEPDIR)/libvt_omp_a-rfg_groups.Po
include ./$(DEPDIR)/libvt_omp_a-rfg_regions.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_gnu.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_pgi.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_phat.Po
include ./$(DEPDIR)/libvt_omp_a-vt_comp_xl.Po
include ./$(DEPDIR)/libvt_omp_a-vt_env.Po
include ./$(DEPDIR)/libvt_omp_a-vt_error.Po
include ./$(DEPDIR)/libvt_omp_a-vt_iowrap.Po
include ./$(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Po
include ./$(DEPDIR)/libvt_omp_a-vt_memhook.Po
include ./$(DEPDIR)/libvt_omp_a-vt_memreg.Po
include ./$(DEPDIR)/libvt_omp_a-vt_metmap.Po
include ./$(DEPDIR)/libvt_omp_a-vt_metric_papi.Po
include ./$(DEPDIR)/libvt_omp_a-vt_omplock.Po
include ./$(DEPDIR)/libvt_omp_a-vt_ompreg.Po
include ./$(DEPDIR)/libvt_omp_a-vt_otf_gen.Po
include ./$(DEPDIR)/libvt_omp_a-vt_otf_sum.Po
include ./$(DEPDIR)/libvt_omp_a-vt_otf_trc.Po
include ./$(DEPDIR)/libvt_omp_a-vt_pform_linux.Po
include ./$(DEPDIR)/libvt_omp_a-vt_pomp.Po
include ./$(DEPDIR)/libvt_omp_a-vt_pomp_base.Po
include ./$(DEPDIR)/libvt_omp_a-vt_thrd.Po
include ./$(DEPDIR)/libvt_omp_a-vt_user_comment.Po
include ./$(DEPDIR)/libvt_omp_a-vt_user_count.Po
include ./$(DEPDIR)/libvt_omp_a-vt_user_region.Po
include ./$(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Po
include ./$(DEPDIR)/libvt_ompi_a-rfg_filter.Po
include ./$(DEPDIR)/libvt_ompi_a-rfg_groups.Po
include ./$(DEPDIR)/libvt_ompi_a-rfg_regions.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_phat.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_comp_xl.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_env.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_error.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_iowrap.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_memhook.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_memreg.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_metmap.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_metric_papi.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_mpicom.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_mpireg.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_mpireq.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_omplock.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_ompreg.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_otf_gen.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_otf_sum.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_otf_trc.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_pform_linux.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_pomp.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_pomp_base.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_sync.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_thrd.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_user_comment.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_user_count.Po
include ./$(DEPDIR)/libvt_ompi_a-vt_user_region.Po
include ./$(DEPDIR)/pomp_fwrapper_base.Po
include ./$(DEPDIR)/rfg_filter.Po
include ./$(DEPDIR)/rfg_groups.Po
include ./$(DEPDIR)/rfg_regions.Po
include ./$(DEPDIR)/vt_comp_dyninst.Po
include ./$(DEPDIR)/vt_comp_ftrace.Po
include ./$(DEPDIR)/vt_comp_gnu.Po
include ./$(DEPDIR)/vt_comp_pgi.Po
include ./$(DEPDIR)/vt_comp_phat.Po
include ./$(DEPDIR)/vt_comp_xl.Po
include ./$(DEPDIR)/vt_env.Po
include ./$(DEPDIR)/vt_error.Po
include ./$(DEPDIR)/vt_iowrap.Po
include ./$(DEPDIR)/vt_iowrap_helper.Po
include ./$(DEPDIR)/vt_memhook.Po
include ./$(DEPDIR)/vt_memreg.Po
include ./$(DEPDIR)/vt_metmap.Po
include ./$(DEPDIR)/vt_metric_papi.Po
include ./$(DEPDIR)/vt_otf_gen.Po
include ./$(DEPDIR)/vt_otf_sum.Po
include ./$(DEPDIR)/vt_otf_trc.Po
include ./$(DEPDIR)/vt_pform_linux.Po
include ./$(DEPDIR)/vt_pomp_base.Po
include ./$(DEPDIR)/vt_thrd.Po
include ./$(DEPDIR)/vt_user_comment.Po
include ./$(DEPDIR)/vt_user_count.Po
include ./$(DEPDIR)/vt_user_region.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

pomp_fwrapper_base.o: $(OPARILIBDIR)/pomp_fwrapper_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pomp_fwrapper_base.o -MD -MP -MF $(DEPDIR)/pomp_fwrapper_base.Tpo -c -o pomp_fwrapper_base.o `test -f '$(OPARILIBDIR)/pomp_fwrapper_base.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper_base.c
	mv -f $(DEPDIR)/pomp_fwrapper_base.Tpo $(DEPDIR)/pomp_fwrapper_base.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper_base.c' object='pomp_fwrapper_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pomp_fwrapper_base.o `test -f '$(OPARILIBDIR)/pomp_fwrapper_base.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper_base.c

pomp_fwrapper_base.obj: $(OPARILIBDIR)/pomp_fwrapper_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pomp_fwrapper_base.obj -MD -MP -MF $(DEPDIR)/pomp_fwrapper_base.Tpo -c -o pomp_fwrapper_base.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper_base.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper_base.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper_base.c'; fi`
	mv -f $(DEPDIR)/pomp_fwrapper_base.Tpo $(DEPDIR)/pomp_fwrapper_base.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper_base.c' object='pomp_fwrapper_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pomp_fwrapper_base.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper_base.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper_base.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper_base.c'; fi`

libvt_fmpi_a-vt_fmpiwrap.o: vt_fmpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_fmpi_a_CFLAGS) $(CFLAGS) -MT libvt_fmpi_a-vt_fmpiwrap.o -MD -MP -MF $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Tpo -c -o libvt_fmpi_a-vt_fmpiwrap.o `test -f 'vt_fmpiwrap.c' || echo '$(srcdir)/'`vt_fmpiwrap.c
	mv -f $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Tpo $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Po
#	source='vt_fmpiwrap.c' object='libvt_fmpi_a-vt_fmpiwrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_fmpi_a_CFLAGS) $(CFLAGS) -c -o libvt_fmpi_a-vt_fmpiwrap.o `test -f 'vt_fmpiwrap.c' || echo '$(srcdir)/'`vt_fmpiwrap.c

libvt_fmpi_a-vt_fmpiwrap.obj: vt_fmpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_fmpi_a_CFLAGS) $(CFLAGS) -MT libvt_fmpi_a-vt_fmpiwrap.obj -MD -MP -MF $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Tpo -c -o libvt_fmpi_a-vt_fmpiwrap.obj `if test -f 'vt_fmpiwrap.c'; then $(CYGPATH_W) 'vt_fmpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_fmpiwrap.c'; fi`
	mv -f $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Tpo $(DEPDIR)/libvt_fmpi_a-vt_fmpiwrap.Po
#	source='vt_fmpiwrap.c' object='libvt_fmpi_a-vt_fmpiwrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_fmpi_a_CFLAGS) $(CFLAGS) -c -o libvt_fmpi_a-vt_fmpiwrap.obj `if test -f 'vt_fmpiwrap.c'; then $(CYGPATH_W) 'vt_fmpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_fmpiwrap.c'; fi`

libvt_mpi_a-vt_comp_gnu.o: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_gnu.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Tpo -c -o libvt_mpi_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_mpi_a-vt_comp_gnu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c

libvt_mpi_a-vt_comp_gnu.obj: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_gnu.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Tpo -c -o libvt_mpi_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_mpi_a-vt_comp_gnu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`

libvt_mpi_a-vt_comp_pgi.o: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_pgi.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Tpo -c -o libvt_mpi_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_mpi_a-vt_comp_pgi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c

libvt_mpi_a-vt_comp_pgi.obj: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_pgi.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Tpo -c -o libvt_mpi_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_mpi_a-vt_comp_pgi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`

libvt_mpi_a-vt_comp_phat.o: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_phat.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Tpo -c -o libvt_mpi_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_mpi_a-vt_comp_phat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c

libvt_mpi_a-vt_comp_phat.obj: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_phat.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Tpo -c -o libvt_mpi_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_mpi_a-vt_comp_phat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`

libvt_mpi_a-vt_comp_xl.o: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_xl.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Tpo -c -o libvt_mpi_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_mpi_a-vt_comp_xl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c

libvt_mpi_a-vt_comp_xl.obj: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_xl.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Tpo -c -o libvt_mpi_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_mpi_a-vt_comp_xl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`

libvt_mpi_a-vt_comp_ftrace.o: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_ftrace.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Tpo -c -o libvt_mpi_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_mpi_a-vt_comp_ftrace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c

libvt_mpi_a-vt_comp_ftrace.obj: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_ftrace.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Tpo -c -o libvt_mpi_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_mpi_a-vt_comp_ftrace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`

libvt_mpi_a-vt_comp_dyninst.o: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_dyninst.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Tpo -c -o libvt_mpi_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_mpi_a-vt_comp_dyninst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c

libvt_mpi_a-vt_comp_dyninst.obj: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_comp_dyninst.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Tpo -c -o libvt_mpi_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_mpi_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_mpi_a-vt_comp_dyninst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`

libvt_mpi_a-vt_memhook.o: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_memhook.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_memhook.Tpo -c -o libvt_mpi_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_memhook.Tpo $(DEPDIR)/libvt_mpi_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_mpi_a-vt_memhook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c

libvt_mpi_a-vt_memhook.obj: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_memhook.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_memhook.Tpo -c -o libvt_mpi_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_memhook.Tpo $(DEPDIR)/libvt_mpi_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_mpi_a-vt_memhook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`

libvt_mpi_a-vt_memreg.o: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_memreg.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_memreg.Tpo -c -o libvt_mpi_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_memreg.Tpo $(DEPDIR)/libvt_mpi_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_mpi_a-vt_memreg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c

libvt_mpi_a-vt_memreg.obj: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_memreg.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_memreg.Tpo -c -o libvt_mpi_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_memreg.Tpo $(DEPDIR)/libvt_mpi_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_mpi_a-vt_memreg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`

libvt_mpi_a-vt_iowrap.o: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_iowrap.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_iowrap.Tpo -c -o libvt_mpi_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_iowrap.Tpo $(DEPDIR)/libvt_mpi_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_mpi_a-vt_iowrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c

libvt_mpi_a-vt_iowrap.obj: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_iowrap.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_iowrap.Tpo -c -o libvt_mpi_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_iowrap.Tpo $(DEPDIR)/libvt_mpi_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_mpi_a-vt_iowrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`

libvt_mpi_a-vt_iowrap_helper.o: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_iowrap_helper.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Tpo -c -o libvt_mpi_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_mpi_a-vt_iowrap_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c

libvt_mpi_a-vt_iowrap_helper.obj: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_iowrap_helper.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Tpo -c -o libvt_mpi_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_mpi_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_mpi_a-vt_iowrap_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`

libvt_mpi_a-vt_metric_papi.o: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_metric_papi.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Tpo -c -o libvt_mpi_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_mpi_a-vt_metric_papi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c

libvt_mpi_a-vt_metric_papi.obj: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_metric_papi.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Tpo -c -o libvt_mpi_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_mpi_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_mpi_a-vt_metric_papi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`

libvt_mpi_a-rfg_regions.o: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_regions.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_regions.Tpo -c -o libvt_mpi_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_regions.Tpo $(DEPDIR)/libvt_mpi_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_mpi_a-rfg_regions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c

libvt_mpi_a-rfg_regions.obj: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_regions.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_regions.Tpo -c -o libvt_mpi_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_regions.Tpo $(DEPDIR)/libvt_mpi_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_mpi_a-rfg_regions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`

libvt_mpi_a-rfg_filter.o: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_filter.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_filter.Tpo -c -o libvt_mpi_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_filter.Tpo $(DEPDIR)/libvt_mpi_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_mpi_a-rfg_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c

libvt_mpi_a-rfg_filter.obj: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_filter.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_filter.Tpo -c -o libvt_mpi_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_filter.Tpo $(DEPDIR)/libvt_mpi_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_mpi_a-rfg_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`

libvt_mpi_a-rfg_groups.o: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_groups.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_groups.Tpo -c -o libvt_mpi_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_groups.Tpo $(DEPDIR)/libvt_mpi_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_mpi_a-rfg_groups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c

libvt_mpi_a-rfg_groups.obj: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-rfg_groups.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-rfg_groups.Tpo -c -o libvt_mpi_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-rfg_groups.Tpo $(DEPDIR)/libvt_mpi_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_mpi_a-rfg_groups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`

libvt_mpi_a-vt_env.o: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_env.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_env.Tpo -c -o libvt_mpi_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_env.Tpo $(DEPDIR)/libvt_mpi_a-vt_env.Po
#	source='vt_env.c' object='libvt_mpi_a-vt_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c

libvt_mpi_a-vt_env.obj: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_env.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_env.Tpo -c -o libvt_mpi_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_env.Tpo $(DEPDIR)/libvt_mpi_a-vt_env.Po
#	source='vt_env.c' object='libvt_mpi_a-vt_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`

libvt_mpi_a-vt_error.o: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_error.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_error.Tpo -c -o libvt_mpi_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_error.Tpo $(DEPDIR)/libvt_mpi_a-vt_error.Po
#	source='vt_error.c' object='libvt_mpi_a-vt_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c

libvt_mpi_a-vt_error.obj: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_error.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_error.Tpo -c -o libvt_mpi_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_error.Tpo $(DEPDIR)/libvt_mpi_a-vt_error.Po
#	source='vt_error.c' object='libvt_mpi_a-vt_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`

libvt_mpi_a-vt_metmap.o: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_metmap.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_metmap.Tpo -c -o libvt_mpi_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_metmap.Tpo $(DEPDIR)/libvt_mpi_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_mpi_a-vt_metmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c

libvt_mpi_a-vt_metmap.obj: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_metmap.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_metmap.Tpo -c -o libvt_mpi_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_metmap.Tpo $(DEPDIR)/libvt_mpi_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_mpi_a-vt_metmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`

libvt_mpi_a-vt_otf_gen.o: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_gen.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Tpo -c -o libvt_mpi_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_mpi_a-vt_otf_gen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c

libvt_mpi_a-vt_otf_gen.obj: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_gen.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Tpo -c -o libvt_mpi_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_mpi_a-vt_otf_gen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`

libvt_mpi_a-vt_otf_sum.o: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_sum.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Tpo -c -o libvt_mpi_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_mpi_a-vt_otf_sum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c

libvt_mpi_a-vt_otf_sum.obj: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_sum.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Tpo -c -o libvt_mpi_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_mpi_a-vt_otf_sum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`

libvt_mpi_a-vt_otf_trc.o: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_trc.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Tpo -c -o libvt_mpi_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_mpi_a-vt_otf_trc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c

libvt_mpi_a-vt_otf_trc.obj: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_otf_trc.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Tpo -c -o libvt_mpi_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_mpi_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_mpi_a-vt_otf_trc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`

libvt_mpi_a-vt_pform_linux.o: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_pform_linux.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Tpo -c -o libvt_mpi_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_mpi_a-vt_pform_linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c

libvt_mpi_a-vt_pform_linux.obj: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_pform_linux.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Tpo -c -o libvt_mpi_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_mpi_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_mpi_a-vt_pform_linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`

libvt_mpi_a-vt_pomp_base.o: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_pomp_base.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Tpo -c -o libvt_mpi_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_mpi_a-vt_pomp_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c

libvt_mpi_a-vt_pomp_base.obj: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_pomp_base.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Tpo -c -o libvt_mpi_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_mpi_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_mpi_a-vt_pomp_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`

libvt_mpi_a-vt_thrd.o: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_thrd.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_thrd.Tpo -c -o libvt_mpi_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_thrd.Tpo $(DEPDIR)/libvt_mpi_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_mpi_a-vt_thrd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c

libvt_mpi_a-vt_thrd.obj: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_thrd.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_thrd.Tpo -c -o libvt_mpi_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_thrd.Tpo $(DEPDIR)/libvt_mpi_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_mpi_a-vt_thrd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`

libvt_mpi_a-vt_user_comment.o: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_comment.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_comment.Tpo -c -o libvt_mpi_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_comment.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_mpi_a-vt_user_comment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c

libvt_mpi_a-vt_user_comment.obj: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_comment.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_comment.Tpo -c -o libvt_mpi_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_comment.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_mpi_a-vt_user_comment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`

libvt_mpi_a-vt_user_count.o: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_count.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_count.Tpo -c -o libvt_mpi_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_count.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_mpi_a-vt_user_count.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c

libvt_mpi_a-vt_user_count.obj: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_count.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_count.Tpo -c -o libvt_mpi_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_count.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_mpi_a-vt_user_count.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`

libvt_mpi_a-vt_user_region.o: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_region.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_region.Tpo -c -o libvt_mpi_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_region.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_mpi_a-vt_user_region.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c

libvt_mpi_a-vt_user_region.obj: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_user_region.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_user_region.Tpo -c -o libvt_mpi_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_user_region.Tpo $(DEPDIR)/libvt_mpi_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_mpi_a-vt_user_region.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`

libvt_mpi_a-vt_mpicom.o: vt_mpicom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpicom.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpicom.Tpo -c -o libvt_mpi_a-vt_mpicom.o `test -f 'vt_mpicom.c' || echo '$(srcdir)/'`vt_mpicom.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpicom.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpicom.Po
#	source='vt_mpicom.c' object='libvt_mpi_a-vt_mpicom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpicom.o `test -f 'vt_mpicom.c' || echo '$(srcdir)/'`vt_mpicom.c

libvt_mpi_a-vt_mpicom.obj: vt_mpicom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpicom.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpicom.Tpo -c -o libvt_mpi_a-vt_mpicom.obj `if test -f 'vt_mpicom.c'; then $(CYGPATH_W) 'vt_mpicom.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpicom.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpicom.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpicom.Po
#	source='vt_mpicom.c' object='libvt_mpi_a-vt_mpicom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpicom.obj `if test -f 'vt_mpicom.c'; then $(CYGPATH_W) 'vt_mpicom.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpicom.c'; fi`

libvt_mpi_a-vt_mpireg.o: vt_mpireg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpireg.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpireg.Tpo -c -o libvt_mpi_a-vt_mpireg.o `test -f 'vt_mpireg.c' || echo '$(srcdir)/'`vt_mpireg.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpireg.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpireg.Po
#	source='vt_mpireg.c' object='libvt_mpi_a-vt_mpireg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpireg.o `test -f 'vt_mpireg.c' || echo '$(srcdir)/'`vt_mpireg.c

libvt_mpi_a-vt_mpireg.obj: vt_mpireg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpireg.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpireg.Tpo -c -o libvt_mpi_a-vt_mpireg.obj `if test -f 'vt_mpireg.c'; then $(CYGPATH_W) 'vt_mpireg.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireg.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpireg.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpireg.Po
#	source='vt_mpireg.c' object='libvt_mpi_a-vt_mpireg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpireg.obj `if test -f 'vt_mpireg.c'; then $(CYGPATH_W) 'vt_mpireg.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireg.c'; fi`

libvt_mpi_a-vt_mpireq.o: vt_mpireq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpireq.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpireq.Tpo -c -o libvt_mpi_a-vt_mpireq.o `test -f 'vt_mpireq.c' || echo '$(srcdir)/'`vt_mpireq.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpireq.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpireq.Po
#	source='vt_mpireq.c' object='libvt_mpi_a-vt_mpireq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpireq.o `test -f 'vt_mpireq.c' || echo '$(srcdir)/'`vt_mpireq.c

libvt_mpi_a-vt_mpireq.obj: vt_mpireq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpireq.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpireq.Tpo -c -o libvt_mpi_a-vt_mpireq.obj `if test -f 'vt_mpireq.c'; then $(CYGPATH_W) 'vt_mpireq.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireq.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpireq.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpireq.Po
#	source='vt_mpireq.c' object='libvt_mpi_a-vt_mpireq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpireq.obj `if test -f 'vt_mpireq.c'; then $(CYGPATH_W) 'vt_mpireq.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireq.c'; fi`

libvt_mpi_a-vt_mpiwrap.o: vt_mpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpiwrap.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Tpo -c -o libvt_mpi_a-vt_mpiwrap.o `test -f 'vt_mpiwrap.c' || echo '$(srcdir)/'`vt_mpiwrap.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Po
#	source='vt_mpiwrap.c' object='libvt_mpi_a-vt_mpiwrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpiwrap.o `test -f 'vt_mpiwrap.c' || echo '$(srcdir)/'`vt_mpiwrap.c

libvt_mpi_a-vt_mpiwrap.obj: vt_mpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_mpiwrap.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Tpo -c -o libvt_mpi_a-vt_mpiwrap.obj `if test -f 'vt_mpiwrap.c'; then $(CYGPATH_W) 'vt_mpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpiwrap.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Tpo $(DEPDIR)/libvt_mpi_a-vt_mpiwrap.Po
#	source='vt_mpiwrap.c' object='libvt_mpi_a-vt_mpiwrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_mpiwrap.obj `if test -f 'vt_mpiwrap.c'; then $(CYGPATH_W) 'vt_mpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpiwrap.c'; fi`

libvt_mpi_a-vt_sync.o: vt_sync.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_sync.o -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_sync.Tpo -c -o libvt_mpi_a-vt_sync.o `test -f 'vt_sync.c' || echo '$(srcdir)/'`vt_sync.c
	mv -f $(DEPDIR)/libvt_mpi_a-vt_sync.Tpo $(DEPDIR)/libvt_mpi_a-vt_sync.Po
#	source='vt_sync.c' object='libvt_mpi_a-vt_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_sync.o `test -f 'vt_sync.c' || echo '$(srcdir)/'`vt_sync.c

libvt_mpi_a-vt_sync.obj: vt_sync.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -MT libvt_mpi_a-vt_sync.obj -MD -MP -MF $(DEPDIR)/libvt_mpi_a-vt_sync.Tpo -c -o libvt_mpi_a-vt_sync.obj `if test -f 'vt_sync.c'; then $(CYGPATH_W) 'vt_sync.c'; else $(CYGPATH_W) '$(srcdir)/vt_sync.c'; fi`
	mv -f $(DEPDIR)/libvt_mpi_a-vt_sync.Tpo $(DEPDIR)/libvt_mpi_a-vt_sync.Po
#	source='vt_sync.c' object='libvt_mpi_a-vt_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_mpi_a_CFLAGS) $(CFLAGS) -c -o libvt_mpi_a-vt_sync.obj `if test -f 'vt_sync.c'; then $(CYGPATH_W) 'vt_sync.c'; else $(CYGPATH_W) '$(srcdir)/vt_sync.c'; fi`

libvt_omp_a-vt_comp_gnu.o: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_gnu.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Tpo -c -o libvt_omp_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_omp_a-vt_comp_gnu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c

libvt_omp_a-vt_comp_gnu.obj: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_gnu.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Tpo -c -o libvt_omp_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_omp_a-vt_comp_gnu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`

libvt_omp_a-vt_comp_pgi.o: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_pgi.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Tpo -c -o libvt_omp_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_omp_a-vt_comp_pgi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c

libvt_omp_a-vt_comp_pgi.obj: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_pgi.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Tpo -c -o libvt_omp_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_omp_a-vt_comp_pgi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`

libvt_omp_a-vt_comp_phat.o: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_phat.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_phat.Tpo -c -o libvt_omp_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_omp_a-vt_comp_phat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c

libvt_omp_a-vt_comp_phat.obj: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_phat.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_phat.Tpo -c -o libvt_omp_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_omp_a-vt_comp_phat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`

libvt_omp_a-vt_comp_xl.o: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_xl.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_xl.Tpo -c -o libvt_omp_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_omp_a-vt_comp_xl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c

libvt_omp_a-vt_comp_xl.obj: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_xl.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_xl.Tpo -c -o libvt_omp_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_omp_a-vt_comp_xl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`

libvt_omp_a-vt_comp_ftrace.o: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_ftrace.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Tpo -c -o libvt_omp_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_omp_a-vt_comp_ftrace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c

libvt_omp_a-vt_comp_ftrace.obj: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_ftrace.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Tpo -c -o libvt_omp_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_omp_a-vt_comp_ftrace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`

libvt_omp_a-vt_comp_dyninst.o: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_dyninst.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Tpo -c -o libvt_omp_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_omp_a-vt_comp_dyninst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c

libvt_omp_a-vt_comp_dyninst.obj: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_comp_dyninst.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Tpo -c -o libvt_omp_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_omp_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_omp_a-vt_comp_dyninst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`

libvt_omp_a-vt_memhook.o: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_memhook.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_memhook.Tpo -c -o libvt_omp_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_memhook.Tpo $(DEPDIR)/libvt_omp_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_omp_a-vt_memhook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c

libvt_omp_a-vt_memhook.obj: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_memhook.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_memhook.Tpo -c -o libvt_omp_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_memhook.Tpo $(DEPDIR)/libvt_omp_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_omp_a-vt_memhook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`

libvt_omp_a-vt_memreg.o: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_memreg.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_memreg.Tpo -c -o libvt_omp_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_memreg.Tpo $(DEPDIR)/libvt_omp_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_omp_a-vt_memreg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c

libvt_omp_a-vt_memreg.obj: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_memreg.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_memreg.Tpo -c -o libvt_omp_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_memreg.Tpo $(DEPDIR)/libvt_omp_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_omp_a-vt_memreg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`

libvt_omp_a-vt_iowrap.o: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_iowrap.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_iowrap.Tpo -c -o libvt_omp_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_iowrap.Tpo $(DEPDIR)/libvt_omp_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_omp_a-vt_iowrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c

libvt_omp_a-vt_iowrap.obj: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_iowrap.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_iowrap.Tpo -c -o libvt_omp_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_iowrap.Tpo $(DEPDIR)/libvt_omp_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_omp_a-vt_iowrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`

libvt_omp_a-vt_iowrap_helper.o: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_iowrap_helper.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Tpo -c -o libvt_omp_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_omp_a-vt_iowrap_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c

libvt_omp_a-vt_iowrap_helper.obj: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_iowrap_helper.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Tpo -c -o libvt_omp_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_omp_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_omp_a-vt_iowrap_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`

libvt_omp_a-vt_metric_papi.o: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_metric_papi.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_metric_papi.Tpo -c -o libvt_omp_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_omp_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_omp_a-vt_metric_papi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c

libvt_omp_a-vt_metric_papi.obj: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_metric_papi.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_metric_papi.Tpo -c -o libvt_omp_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_omp_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_omp_a-vt_metric_papi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`

libvt_omp_a-rfg_regions.o: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_regions.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_regions.Tpo -c -o libvt_omp_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c
	mv -f $(DEPDIR)/libvt_omp_a-rfg_regions.Tpo $(DEPDIR)/libvt_omp_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_omp_a-rfg_regions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c

libvt_omp_a-rfg_regions.obj: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_regions.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_regions.Tpo -c -o libvt_omp_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-rfg_regions.Tpo $(DEPDIR)/libvt_omp_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_omp_a-rfg_regions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`

libvt_omp_a-rfg_filter.o: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_filter.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_filter.Tpo -c -o libvt_omp_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c
	mv -f $(DEPDIR)/libvt_omp_a-rfg_filter.Tpo $(DEPDIR)/libvt_omp_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_omp_a-rfg_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c

libvt_omp_a-rfg_filter.obj: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_filter.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_filter.Tpo -c -o libvt_omp_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-rfg_filter.Tpo $(DEPDIR)/libvt_omp_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_omp_a-rfg_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`

libvt_omp_a-rfg_groups.o: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_groups.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_groups.Tpo -c -o libvt_omp_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c
	mv -f $(DEPDIR)/libvt_omp_a-rfg_groups.Tpo $(DEPDIR)/libvt_omp_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_omp_a-rfg_groups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c

libvt_omp_a-rfg_groups.obj: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-rfg_groups.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-rfg_groups.Tpo -c -o libvt_omp_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-rfg_groups.Tpo $(DEPDIR)/libvt_omp_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_omp_a-rfg_groups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`

libvt_omp_a-vt_env.o: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_env.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_env.Tpo -c -o libvt_omp_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_env.Tpo $(DEPDIR)/libvt_omp_a-vt_env.Po
#	source='vt_env.c' object='libvt_omp_a-vt_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c

libvt_omp_a-vt_env.obj: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_env.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_env.Tpo -c -o libvt_omp_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_env.Tpo $(DEPDIR)/libvt_omp_a-vt_env.Po
#	source='vt_env.c' object='libvt_omp_a-vt_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`

libvt_omp_a-vt_error.o: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_error.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_error.Tpo -c -o libvt_omp_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_error.Tpo $(DEPDIR)/libvt_omp_a-vt_error.Po
#	source='vt_error.c' object='libvt_omp_a-vt_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c

libvt_omp_a-vt_error.obj: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_error.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_error.Tpo -c -o libvt_omp_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_error.Tpo $(DEPDIR)/libvt_omp_a-vt_error.Po
#	source='vt_error.c' object='libvt_omp_a-vt_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`

libvt_omp_a-vt_metmap.o: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_metmap.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_metmap.Tpo -c -o libvt_omp_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_metmap.Tpo $(DEPDIR)/libvt_omp_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_omp_a-vt_metmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c

libvt_omp_a-vt_metmap.obj: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_metmap.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_metmap.Tpo -c -o libvt_omp_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_metmap.Tpo $(DEPDIR)/libvt_omp_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_omp_a-vt_metmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`

libvt_omp_a-vt_otf_gen.o: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_gen.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_gen.Tpo -c -o libvt_omp_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_omp_a-vt_otf_gen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c

libvt_omp_a-vt_otf_gen.obj: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_gen.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_gen.Tpo -c -o libvt_omp_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_omp_a-vt_otf_gen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`

libvt_omp_a-vt_otf_sum.o: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_sum.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_sum.Tpo -c -o libvt_omp_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_omp_a-vt_otf_sum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c

libvt_omp_a-vt_otf_sum.obj: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_sum.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_sum.Tpo -c -o libvt_omp_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_omp_a-vt_otf_sum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`

libvt_omp_a-vt_otf_trc.o: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_trc.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_trc.Tpo -c -o libvt_omp_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_omp_a-vt_otf_trc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c

libvt_omp_a-vt_otf_trc.obj: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_otf_trc.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_otf_trc.Tpo -c -o libvt_omp_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_omp_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_omp_a-vt_otf_trc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`

libvt_omp_a-vt_pform_linux.o: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pform_linux.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pform_linux.Tpo -c -o libvt_omp_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_omp_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_omp_a-vt_pform_linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c

libvt_omp_a-vt_pform_linux.obj: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pform_linux.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pform_linux.Tpo -c -o libvt_omp_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_omp_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_omp_a-vt_pform_linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`

libvt_omp_a-vt_pomp_base.o: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pomp_base.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pomp_base.Tpo -c -o libvt_omp_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_omp_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_omp_a-vt_pomp_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c

libvt_omp_a-vt_pomp_base.obj: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pomp_base.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pomp_base.Tpo -c -o libvt_omp_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_omp_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_omp_a-vt_pomp_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`

libvt_omp_a-vt_thrd.o: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_thrd.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_thrd.Tpo -c -o libvt_omp_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_thrd.Tpo $(DEPDIR)/libvt_omp_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_omp_a-vt_thrd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c

libvt_omp_a-vt_thrd.obj: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_thrd.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_thrd.Tpo -c -o libvt_omp_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_thrd.Tpo $(DEPDIR)/libvt_omp_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_omp_a-vt_thrd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`

libvt_omp_a-vt_user_comment.o: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_comment.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_comment.Tpo -c -o libvt_omp_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_comment.Tpo $(DEPDIR)/libvt_omp_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_omp_a-vt_user_comment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c

libvt_omp_a-vt_user_comment.obj: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_comment.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_comment.Tpo -c -o libvt_omp_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_comment.Tpo $(DEPDIR)/libvt_omp_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_omp_a-vt_user_comment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`

libvt_omp_a-vt_user_count.o: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_count.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_count.Tpo -c -o libvt_omp_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_count.Tpo $(DEPDIR)/libvt_omp_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_omp_a-vt_user_count.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c

libvt_omp_a-vt_user_count.obj: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_count.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_count.Tpo -c -o libvt_omp_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_count.Tpo $(DEPDIR)/libvt_omp_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_omp_a-vt_user_count.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`

libvt_omp_a-vt_user_region.o: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_region.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_region.Tpo -c -o libvt_omp_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_region.Tpo $(DEPDIR)/libvt_omp_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_omp_a-vt_user_region.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c

libvt_omp_a-vt_user_region.obj: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_user_region.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_user_region.Tpo -c -o libvt_omp_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_user_region.Tpo $(DEPDIR)/libvt_omp_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_omp_a-vt_user_region.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`

libvt_omp_a-vt_omplock.o: vt_omplock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_omplock.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_omplock.Tpo -c -o libvt_omp_a-vt_omplock.o `test -f 'vt_omplock.c' || echo '$(srcdir)/'`vt_omplock.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_omplock.Tpo $(DEPDIR)/libvt_omp_a-vt_omplock.Po
#	source='vt_omplock.c' object='libvt_omp_a-vt_omplock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_omplock.o `test -f 'vt_omplock.c' || echo '$(srcdir)/'`vt_omplock.c

libvt_omp_a-vt_omplock.obj: vt_omplock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_omplock.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_omplock.Tpo -c -o libvt_omp_a-vt_omplock.obj `if test -f 'vt_omplock.c'; then $(CYGPATH_W) 'vt_omplock.c'; else $(CYGPATH_W) '$(srcdir)/vt_omplock.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_omplock.Tpo $(DEPDIR)/libvt_omp_a-vt_omplock.Po
#	source='vt_omplock.c' object='libvt_omp_a-vt_omplock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_omplock.obj `if test -f 'vt_omplock.c'; then $(CYGPATH_W) 'vt_omplock.c'; else $(CYGPATH_W) '$(srcdir)/vt_omplock.c'; fi`

libvt_omp_a-vt_ompreg.o: vt_ompreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_ompreg.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_ompreg.Tpo -c -o libvt_omp_a-vt_ompreg.o `test -f 'vt_ompreg.c' || echo '$(srcdir)/'`vt_ompreg.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_ompreg.Tpo $(DEPDIR)/libvt_omp_a-vt_ompreg.Po
#	source='vt_ompreg.c' object='libvt_omp_a-vt_ompreg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_ompreg.o `test -f 'vt_ompreg.c' || echo '$(srcdir)/'`vt_ompreg.c

libvt_omp_a-vt_ompreg.obj: vt_ompreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_ompreg.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_ompreg.Tpo -c -o libvt_omp_a-vt_ompreg.obj `if test -f 'vt_ompreg.c'; then $(CYGPATH_W) 'vt_ompreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_ompreg.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_ompreg.Tpo $(DEPDIR)/libvt_omp_a-vt_ompreg.Po
#	source='vt_ompreg.c' object='libvt_omp_a-vt_ompreg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_ompreg.obj `if test -f 'vt_ompreg.c'; then $(CYGPATH_W) 'vt_ompreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_ompreg.c'; fi`

libvt_omp_a-vt_pomp.o: vt_pomp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pomp.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pomp.Tpo -c -o libvt_omp_a-vt_pomp.o `test -f 'vt_pomp.c' || echo '$(srcdir)/'`vt_pomp.c
	mv -f $(DEPDIR)/libvt_omp_a-vt_pomp.Tpo $(DEPDIR)/libvt_omp_a-vt_pomp.Po
#	source='vt_pomp.c' object='libvt_omp_a-vt_pomp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pomp.o `test -f 'vt_pomp.c' || echo '$(srcdir)/'`vt_pomp.c

libvt_omp_a-vt_pomp.obj: vt_pomp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-vt_pomp.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-vt_pomp.Tpo -c -o libvt_omp_a-vt_pomp.obj `if test -f 'vt_pomp.c'; then $(CYGPATH_W) 'vt_pomp.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-vt_pomp.Tpo $(DEPDIR)/libvt_omp_a-vt_pomp.Po
#	source='vt_pomp.c' object='libvt_omp_a-vt_pomp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-vt_pomp.obj `if test -f 'vt_pomp.c'; then $(CYGPATH_W) 'vt_pomp.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp.c'; fi`

libvt_omp_a-pomp_fwrapper.o: $(OPARILIBDIR)/pomp_fwrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-pomp_fwrapper.o -MD -MP -MF $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Tpo -c -o libvt_omp_a-pomp_fwrapper.o `test -f '$(OPARILIBDIR)/pomp_fwrapper.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper.c
	mv -f $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Tpo $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper.c' object='libvt_omp_a-pomp_fwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-pomp_fwrapper.o `test -f '$(OPARILIBDIR)/pomp_fwrapper.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper.c

libvt_omp_a-pomp_fwrapper.obj: $(OPARILIBDIR)/pomp_fwrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -MT libvt_omp_a-pomp_fwrapper.obj -MD -MP -MF $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Tpo -c -o libvt_omp_a-pomp_fwrapper.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper.c'; fi`
	mv -f $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Tpo $(DEPDIR)/libvt_omp_a-pomp_fwrapper.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper.c' object='libvt_omp_a-pomp_fwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_omp_a_CFLAGS) $(CFLAGS) -c -o libvt_omp_a-pomp_fwrapper.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper.c'; fi`

libvt_ompi_a-vt_comp_gnu.o: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_gnu.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Tpo -c -o libvt_ompi_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_ompi_a-vt_comp_gnu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_gnu.o `test -f 'vt_comp_gnu.c' || echo '$(srcdir)/'`vt_comp_gnu.c

libvt_ompi_a-vt_comp_gnu.obj: vt_comp_gnu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_gnu.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Tpo -c -o libvt_ompi_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_gnu.Po
#	source='vt_comp_gnu.c' object='libvt_ompi_a-vt_comp_gnu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_gnu.obj `if test -f 'vt_comp_gnu.c'; then $(CYGPATH_W) 'vt_comp_gnu.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_gnu.c'; fi`

libvt_ompi_a-vt_comp_pgi.o: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_pgi.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Tpo -c -o libvt_ompi_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_ompi_a-vt_comp_pgi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_pgi.o `test -f 'vt_comp_pgi.c' || echo '$(srcdir)/'`vt_comp_pgi.c

libvt_ompi_a-vt_comp_pgi.obj: vt_comp_pgi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_pgi.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Tpo -c -o libvt_ompi_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_pgi.Po
#	source='vt_comp_pgi.c' object='libvt_ompi_a-vt_comp_pgi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_pgi.obj `if test -f 'vt_comp_pgi.c'; then $(CYGPATH_W) 'vt_comp_pgi.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_pgi.c'; fi`

libvt_ompi_a-vt_comp_phat.o: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_phat.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Tpo -c -o libvt_ompi_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_ompi_a-vt_comp_phat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_phat.o `test -f 'vt_comp_phat.c' || echo '$(srcdir)/'`vt_comp_phat.c

libvt_ompi_a-vt_comp_phat.obj: vt_comp_phat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_phat.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Tpo -c -o libvt_ompi_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_phat.Po
#	source='vt_comp_phat.c' object='libvt_ompi_a-vt_comp_phat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_phat.obj `if test -f 'vt_comp_phat.c'; then $(CYGPATH_W) 'vt_comp_phat.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_phat.c'; fi`

libvt_ompi_a-vt_comp_xl.o: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_xl.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Tpo -c -o libvt_ompi_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_ompi_a-vt_comp_xl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_xl.o `test -f 'vt_comp_xl.c' || echo '$(srcdir)/'`vt_comp_xl.c

libvt_ompi_a-vt_comp_xl.obj: vt_comp_xl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_xl.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Tpo -c -o libvt_ompi_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_xl.Po
#	source='vt_comp_xl.c' object='libvt_ompi_a-vt_comp_xl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_xl.obj `if test -f 'vt_comp_xl.c'; then $(CYGPATH_W) 'vt_comp_xl.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_xl.c'; fi`

libvt_ompi_a-vt_comp_ftrace.o: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_ftrace.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Tpo -c -o libvt_ompi_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_ompi_a-vt_comp_ftrace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_ftrace.o `test -f 'vt_comp_ftrace.c' || echo '$(srcdir)/'`vt_comp_ftrace.c

libvt_ompi_a-vt_comp_ftrace.obj: vt_comp_ftrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_ftrace.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Tpo -c -o libvt_ompi_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_ftrace.Po
#	source='vt_comp_ftrace.c' object='libvt_ompi_a-vt_comp_ftrace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_ftrace.obj `if test -f 'vt_comp_ftrace.c'; then $(CYGPATH_W) 'vt_comp_ftrace.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_ftrace.c'; fi`

libvt_ompi_a-vt_comp_dyninst.o: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_dyninst.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Tpo -c -o libvt_ompi_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_ompi_a-vt_comp_dyninst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_dyninst.o `test -f 'vt_comp_dyninst.c' || echo '$(srcdir)/'`vt_comp_dyninst.c

libvt_ompi_a-vt_comp_dyninst.obj: vt_comp_dyninst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_comp_dyninst.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Tpo -c -o libvt_ompi_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Tpo $(DEPDIR)/libvt_ompi_a-vt_comp_dyninst.Po
#	source='vt_comp_dyninst.c' object='libvt_ompi_a-vt_comp_dyninst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_comp_dyninst.obj `if test -f 'vt_comp_dyninst.c'; then $(CYGPATH_W) 'vt_comp_dyninst.c'; else $(CYGPATH_W) '$(srcdir)/vt_comp_dyninst.c'; fi`

libvt_ompi_a-vt_memhook.o: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_memhook.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_memhook.Tpo -c -o libvt_ompi_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_memhook.Tpo $(DEPDIR)/libvt_ompi_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_ompi_a-vt_memhook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_memhook.o `test -f 'vt_memhook.c' || echo '$(srcdir)/'`vt_memhook.c

libvt_ompi_a-vt_memhook.obj: vt_memhook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_memhook.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_memhook.Tpo -c -o libvt_ompi_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_memhook.Tpo $(DEPDIR)/libvt_ompi_a-vt_memhook.Po
#	source='vt_memhook.c' object='libvt_ompi_a-vt_memhook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_memhook.obj `if test -f 'vt_memhook.c'; then $(CYGPATH_W) 'vt_memhook.c'; else $(CYGPATH_W) '$(srcdir)/vt_memhook.c'; fi`

libvt_ompi_a-vt_memreg.o: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_memreg.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_memreg.Tpo -c -o libvt_ompi_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_memreg.Tpo $(DEPDIR)/libvt_ompi_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_ompi_a-vt_memreg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_memreg.o `test -f 'vt_memreg.c' || echo '$(srcdir)/'`vt_memreg.c

libvt_ompi_a-vt_memreg.obj: vt_memreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_memreg.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_memreg.Tpo -c -o libvt_ompi_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_memreg.Tpo $(DEPDIR)/libvt_ompi_a-vt_memreg.Po
#	source='vt_memreg.c' object='libvt_ompi_a-vt_memreg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_memreg.obj `if test -f 'vt_memreg.c'; then $(CYGPATH_W) 'vt_memreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_memreg.c'; fi`

libvt_ompi_a-vt_iowrap.o: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_iowrap.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_iowrap.Tpo -c -o libvt_ompi_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_iowrap.Tpo $(DEPDIR)/libvt_ompi_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_ompi_a-vt_iowrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_iowrap.o `test -f 'vt_iowrap.c' || echo '$(srcdir)/'`vt_iowrap.c

libvt_ompi_a-vt_iowrap.obj: vt_iowrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_iowrap.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_iowrap.Tpo -c -o libvt_ompi_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_iowrap.Tpo $(DEPDIR)/libvt_ompi_a-vt_iowrap.Po
#	source='vt_iowrap.c' object='libvt_ompi_a-vt_iowrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_iowrap.obj `if test -f 'vt_iowrap.c'; then $(CYGPATH_W) 'vt_iowrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap.c'; fi`

libvt_ompi_a-vt_iowrap_helper.o: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_iowrap_helper.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Tpo -c -o libvt_ompi_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_ompi_a-vt_iowrap_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_iowrap_helper.o `test -f 'vt_iowrap_helper.c' || echo '$(srcdir)/'`vt_iowrap_helper.c

libvt_ompi_a-vt_iowrap_helper.obj: vt_iowrap_helper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_iowrap_helper.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Tpo -c -o libvt_ompi_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Tpo $(DEPDIR)/libvt_ompi_a-vt_iowrap_helper.Po
#	source='vt_iowrap_helper.c' object='libvt_ompi_a-vt_iowrap_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_iowrap_helper.obj `if test -f 'vt_iowrap_helper.c'; then $(CYGPATH_W) 'vt_iowrap_helper.c'; else $(CYGPATH_W) '$(srcdir)/vt_iowrap_helper.c'; fi`

libvt_ompi_a-vt_metric_papi.o: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_metric_papi.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Tpo -c -o libvt_ompi_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_ompi_a-vt_metric_papi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_metric_papi.o `test -f 'vt_metric_papi.c' || echo '$(srcdir)/'`vt_metric_papi.c

libvt_ompi_a-vt_metric_papi.obj: vt_metric_papi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_metric_papi.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Tpo -c -o libvt_ompi_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Tpo $(DEPDIR)/libvt_ompi_a-vt_metric_papi.Po
#	source='vt_metric_papi.c' object='libvt_ompi_a-vt_metric_papi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_metric_papi.obj `if test -f 'vt_metric_papi.c'; then $(CYGPATH_W) 'vt_metric_papi.c'; else $(CYGPATH_W) '$(srcdir)/vt_metric_papi.c'; fi`

libvt_ompi_a-rfg_regions.o: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_regions.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_regions.Tpo -c -o libvt_ompi_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_regions.Tpo $(DEPDIR)/libvt_ompi_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_ompi_a-rfg_regions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_regions.o `test -f 'rfg_regions.c' || echo '$(srcdir)/'`rfg_regions.c

libvt_ompi_a-rfg_regions.obj: rfg_regions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_regions.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_regions.Tpo -c -o libvt_ompi_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_regions.Tpo $(DEPDIR)/libvt_ompi_a-rfg_regions.Po
#	source='rfg_regions.c' object='libvt_ompi_a-rfg_regions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_regions.obj `if test -f 'rfg_regions.c'; then $(CYGPATH_W) 'rfg_regions.c'; else $(CYGPATH_W) '$(srcdir)/rfg_regions.c'; fi`

libvt_ompi_a-rfg_filter.o: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_filter.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_filter.Tpo -c -o libvt_ompi_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_filter.Tpo $(DEPDIR)/libvt_ompi_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_ompi_a-rfg_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_filter.o `test -f 'rfg_filter.c' || echo '$(srcdir)/'`rfg_filter.c

libvt_ompi_a-rfg_filter.obj: rfg_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_filter.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_filter.Tpo -c -o libvt_ompi_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_filter.Tpo $(DEPDIR)/libvt_ompi_a-rfg_filter.Po
#	source='rfg_filter.c' object='libvt_ompi_a-rfg_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_filter.obj `if test -f 'rfg_filter.c'; then $(CYGPATH_W) 'rfg_filter.c'; else $(CYGPATH_W) '$(srcdir)/rfg_filter.c'; fi`

libvt_ompi_a-rfg_groups.o: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_groups.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_groups.Tpo -c -o libvt_ompi_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_groups.Tpo $(DEPDIR)/libvt_ompi_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_ompi_a-rfg_groups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_groups.o `test -f 'rfg_groups.c' || echo '$(srcdir)/'`rfg_groups.c

libvt_ompi_a-rfg_groups.obj: rfg_groups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-rfg_groups.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-rfg_groups.Tpo -c -o libvt_ompi_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-rfg_groups.Tpo $(DEPDIR)/libvt_ompi_a-rfg_groups.Po
#	source='rfg_groups.c' object='libvt_ompi_a-rfg_groups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-rfg_groups.obj `if test -f 'rfg_groups.c'; then $(CYGPATH_W) 'rfg_groups.c'; else $(CYGPATH_W) '$(srcdir)/rfg_groups.c'; fi`

libvt_ompi_a-vt_env.o: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_env.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_env.Tpo -c -o libvt_ompi_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_env.Tpo $(DEPDIR)/libvt_ompi_a-vt_env.Po
#	source='vt_env.c' object='libvt_ompi_a-vt_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_env.o `test -f 'vt_env.c' || echo '$(srcdir)/'`vt_env.c

libvt_ompi_a-vt_env.obj: vt_env.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_env.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_env.Tpo -c -o libvt_ompi_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_env.Tpo $(DEPDIR)/libvt_ompi_a-vt_env.Po
#	source='vt_env.c' object='libvt_ompi_a-vt_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_env.obj `if test -f 'vt_env.c'; then $(CYGPATH_W) 'vt_env.c'; else $(CYGPATH_W) '$(srcdir)/vt_env.c'; fi`

libvt_ompi_a-vt_error.o: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_error.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_error.Tpo -c -o libvt_ompi_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_error.Tpo $(DEPDIR)/libvt_ompi_a-vt_error.Po
#	source='vt_error.c' object='libvt_ompi_a-vt_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_error.o `test -f 'vt_error.c' || echo '$(srcdir)/'`vt_error.c

libvt_ompi_a-vt_error.obj: vt_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_error.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_error.Tpo -c -o libvt_ompi_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_error.Tpo $(DEPDIR)/libvt_ompi_a-vt_error.Po
#	source='vt_error.c' object='libvt_ompi_a-vt_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_error.obj `if test -f 'vt_error.c'; then $(CYGPATH_W) 'vt_error.c'; else $(CYGPATH_W) '$(srcdir)/vt_error.c'; fi`

libvt_ompi_a-vt_metmap.o: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_metmap.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_metmap.Tpo -c -o libvt_ompi_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_metmap.Tpo $(DEPDIR)/libvt_ompi_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_ompi_a-vt_metmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_metmap.o `test -f 'vt_metmap.c' || echo '$(srcdir)/'`vt_metmap.c

libvt_ompi_a-vt_metmap.obj: vt_metmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_metmap.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_metmap.Tpo -c -o libvt_ompi_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_metmap.Tpo $(DEPDIR)/libvt_ompi_a-vt_metmap.Po
#	source='vt_metmap.c' object='libvt_ompi_a-vt_metmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_metmap.obj `if test -f 'vt_metmap.c'; then $(CYGPATH_W) 'vt_metmap.c'; else $(CYGPATH_W) '$(srcdir)/vt_metmap.c'; fi`

libvt_ompi_a-vt_otf_gen.o: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_gen.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Tpo -c -o libvt_ompi_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_ompi_a-vt_otf_gen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_gen.o `test -f 'vt_otf_gen.c' || echo '$(srcdir)/'`vt_otf_gen.c

libvt_ompi_a-vt_otf_gen.obj: vt_otf_gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_gen.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Tpo -c -o libvt_ompi_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_gen.Po
#	source='vt_otf_gen.c' object='libvt_ompi_a-vt_otf_gen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_gen.obj `if test -f 'vt_otf_gen.c'; then $(CYGPATH_W) 'vt_otf_gen.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_gen.c'; fi`

libvt_ompi_a-vt_otf_sum.o: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_sum.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Tpo -c -o libvt_ompi_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_ompi_a-vt_otf_sum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_sum.o `test -f 'vt_otf_sum.c' || echo '$(srcdir)/'`vt_otf_sum.c

libvt_ompi_a-vt_otf_sum.obj: vt_otf_sum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_sum.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Tpo -c -o libvt_ompi_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_sum.Po
#	source='vt_otf_sum.c' object='libvt_ompi_a-vt_otf_sum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_sum.obj `if test -f 'vt_otf_sum.c'; then $(CYGPATH_W) 'vt_otf_sum.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_sum.c'; fi`

libvt_ompi_a-vt_otf_trc.o: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_trc.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Tpo -c -o libvt_ompi_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_ompi_a-vt_otf_trc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_trc.o `test -f 'vt_otf_trc.c' || echo '$(srcdir)/'`vt_otf_trc.c

libvt_ompi_a-vt_otf_trc.obj: vt_otf_trc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_otf_trc.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Tpo -c -o libvt_ompi_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Tpo $(DEPDIR)/libvt_ompi_a-vt_otf_trc.Po
#	source='vt_otf_trc.c' object='libvt_ompi_a-vt_otf_trc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_otf_trc.obj `if test -f 'vt_otf_trc.c'; then $(CYGPATH_W) 'vt_otf_trc.c'; else $(CYGPATH_W) '$(srcdir)/vt_otf_trc.c'; fi`

libvt_ompi_a-vt_pform_linux.o: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pform_linux.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Tpo -c -o libvt_ompi_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_ompi_a-vt_pform_linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pform_linux.o `test -f 'vt_pform_linux.c' || echo '$(srcdir)/'`vt_pform_linux.c

libvt_ompi_a-vt_pform_linux.obj: vt_pform_linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pform_linux.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Tpo -c -o libvt_ompi_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Tpo $(DEPDIR)/libvt_ompi_a-vt_pform_linux.Po
#	source='vt_pform_linux.c' object='libvt_ompi_a-vt_pform_linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pform_linux.obj `if test -f 'vt_pform_linux.c'; then $(CYGPATH_W) 'vt_pform_linux.c'; else $(CYGPATH_W) '$(srcdir)/vt_pform_linux.c'; fi`

libvt_ompi_a-vt_pomp_base.o: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pomp_base.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Tpo -c -o libvt_ompi_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_ompi_a-vt_pomp_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pomp_base.o `test -f 'vt_pomp_base.c' || echo '$(srcdir)/'`vt_pomp_base.c

libvt_ompi_a-vt_pomp_base.obj: vt_pomp_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pomp_base.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Tpo -c -o libvt_ompi_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Tpo $(DEPDIR)/libvt_ompi_a-vt_pomp_base.Po
#	source='vt_pomp_base.c' object='libvt_ompi_a-vt_pomp_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pomp_base.obj `if test -f 'vt_pomp_base.c'; then $(CYGPATH_W) 'vt_pomp_base.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp_base.c'; fi`

libvt_ompi_a-vt_thrd.o: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_thrd.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_thrd.Tpo -c -o libvt_ompi_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_thrd.Tpo $(DEPDIR)/libvt_ompi_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_ompi_a-vt_thrd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_thrd.o `test -f 'vt_thrd.c' || echo '$(srcdir)/'`vt_thrd.c

libvt_ompi_a-vt_thrd.obj: vt_thrd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_thrd.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_thrd.Tpo -c -o libvt_ompi_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_thrd.Tpo $(DEPDIR)/libvt_ompi_a-vt_thrd.Po
#	source='vt_thrd.c' object='libvt_ompi_a-vt_thrd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_thrd.obj `if test -f 'vt_thrd.c'; then $(CYGPATH_W) 'vt_thrd.c'; else $(CYGPATH_W) '$(srcdir)/vt_thrd.c'; fi`

libvt_ompi_a-vt_user_comment.o: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_comment.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_comment.Tpo -c -o libvt_ompi_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_comment.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_ompi_a-vt_user_comment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_comment.o `test -f 'vt_user_comment.c' || echo '$(srcdir)/'`vt_user_comment.c

libvt_ompi_a-vt_user_comment.obj: vt_user_comment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_comment.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_comment.Tpo -c -o libvt_ompi_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_comment.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_comment.Po
#	source='vt_user_comment.c' object='libvt_ompi_a-vt_user_comment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_comment.obj `if test -f 'vt_user_comment.c'; then $(CYGPATH_W) 'vt_user_comment.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_comment.c'; fi`

libvt_ompi_a-vt_user_count.o: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_count.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_count.Tpo -c -o libvt_ompi_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_count.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_ompi_a-vt_user_count.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_count.o `test -f 'vt_user_count.c' || echo '$(srcdir)/'`vt_user_count.c

libvt_ompi_a-vt_user_count.obj: vt_user_count.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_count.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_count.Tpo -c -o libvt_ompi_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_count.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_count.Po
#	source='vt_user_count.c' object='libvt_ompi_a-vt_user_count.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_count.obj `if test -f 'vt_user_count.c'; then $(CYGPATH_W) 'vt_user_count.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_count.c'; fi`

libvt_ompi_a-vt_user_region.o: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_region.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_region.Tpo -c -o libvt_ompi_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_region.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_ompi_a-vt_user_region.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_region.o `test -f 'vt_user_region.c' || echo '$(srcdir)/'`vt_user_region.c

libvt_ompi_a-vt_user_region.obj: vt_user_region.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_user_region.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_user_region.Tpo -c -o libvt_ompi_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_user_region.Tpo $(DEPDIR)/libvt_ompi_a-vt_user_region.Po
#	source='vt_user_region.c' object='libvt_ompi_a-vt_user_region.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_user_region.obj `if test -f 'vt_user_region.c'; then $(CYGPATH_W) 'vt_user_region.c'; else $(CYGPATH_W) '$(srcdir)/vt_user_region.c'; fi`

libvt_ompi_a-vt_mpicom.o: vt_mpicom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpicom.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpicom.Tpo -c -o libvt_ompi_a-vt_mpicom.o `test -f 'vt_mpicom.c' || echo '$(srcdir)/'`vt_mpicom.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpicom.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpicom.Po
#	source='vt_mpicom.c' object='libvt_ompi_a-vt_mpicom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpicom.o `test -f 'vt_mpicom.c' || echo '$(srcdir)/'`vt_mpicom.c

libvt_ompi_a-vt_mpicom.obj: vt_mpicom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpicom.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpicom.Tpo -c -o libvt_ompi_a-vt_mpicom.obj `if test -f 'vt_mpicom.c'; then $(CYGPATH_W) 'vt_mpicom.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpicom.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpicom.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpicom.Po
#	source='vt_mpicom.c' object='libvt_ompi_a-vt_mpicom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpicom.obj `if test -f 'vt_mpicom.c'; then $(CYGPATH_W) 'vt_mpicom.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpicom.c'; fi`

libvt_ompi_a-vt_mpireg.o: vt_mpireg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpireg.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpireg.Tpo -c -o libvt_ompi_a-vt_mpireg.o `test -f 'vt_mpireg.c' || echo '$(srcdir)/'`vt_mpireg.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpireg.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpireg.Po
#	source='vt_mpireg.c' object='libvt_ompi_a-vt_mpireg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpireg.o `test -f 'vt_mpireg.c' || echo '$(srcdir)/'`vt_mpireg.c

libvt_ompi_a-vt_mpireg.obj: vt_mpireg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpireg.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpireg.Tpo -c -o libvt_ompi_a-vt_mpireg.obj `if test -f 'vt_mpireg.c'; then $(CYGPATH_W) 'vt_mpireg.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireg.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpireg.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpireg.Po
#	source='vt_mpireg.c' object='libvt_ompi_a-vt_mpireg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpireg.obj `if test -f 'vt_mpireg.c'; then $(CYGPATH_W) 'vt_mpireg.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireg.c'; fi`

libvt_ompi_a-vt_mpireq.o: vt_mpireq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpireq.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpireq.Tpo -c -o libvt_ompi_a-vt_mpireq.o `test -f 'vt_mpireq.c' || echo '$(srcdir)/'`vt_mpireq.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpireq.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpireq.Po
#	source='vt_mpireq.c' object='libvt_ompi_a-vt_mpireq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpireq.o `test -f 'vt_mpireq.c' || echo '$(srcdir)/'`vt_mpireq.c

libvt_ompi_a-vt_mpireq.obj: vt_mpireq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpireq.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpireq.Tpo -c -o libvt_ompi_a-vt_mpireq.obj `if test -f 'vt_mpireq.c'; then $(CYGPATH_W) 'vt_mpireq.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireq.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpireq.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpireq.Po
#	source='vt_mpireq.c' object='libvt_ompi_a-vt_mpireq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpireq.obj `if test -f 'vt_mpireq.c'; then $(CYGPATH_W) 'vt_mpireq.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpireq.c'; fi`

libvt_ompi_a-vt_mpiwrap.o: vt_mpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpiwrap.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Tpo -c -o libvt_ompi_a-vt_mpiwrap.o `test -f 'vt_mpiwrap.c' || echo '$(srcdir)/'`vt_mpiwrap.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Po
#	source='vt_mpiwrap.c' object='libvt_ompi_a-vt_mpiwrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpiwrap.o `test -f 'vt_mpiwrap.c' || echo '$(srcdir)/'`vt_mpiwrap.c

libvt_ompi_a-vt_mpiwrap.obj: vt_mpiwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_mpiwrap.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Tpo -c -o libvt_ompi_a-vt_mpiwrap.obj `if test -f 'vt_mpiwrap.c'; then $(CYGPATH_W) 'vt_mpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpiwrap.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Tpo $(DEPDIR)/libvt_ompi_a-vt_mpiwrap.Po
#	source='vt_mpiwrap.c' object='libvt_ompi_a-vt_mpiwrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_mpiwrap.obj `if test -f 'vt_mpiwrap.c'; then $(CYGPATH_W) 'vt_mpiwrap.c'; else $(CYGPATH_W) '$(srcdir)/vt_mpiwrap.c'; fi`

libvt_ompi_a-vt_sync.o: vt_sync.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_sync.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_sync.Tpo -c -o libvt_ompi_a-vt_sync.o `test -f 'vt_sync.c' || echo '$(srcdir)/'`vt_sync.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_sync.Tpo $(DEPDIR)/libvt_ompi_a-vt_sync.Po
#	source='vt_sync.c' object='libvt_ompi_a-vt_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_sync.o `test -f 'vt_sync.c' || echo '$(srcdir)/'`vt_sync.c

libvt_ompi_a-vt_sync.obj: vt_sync.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_sync.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_sync.Tpo -c -o libvt_ompi_a-vt_sync.obj `if test -f 'vt_sync.c'; then $(CYGPATH_W) 'vt_sync.c'; else $(CYGPATH_W) '$(srcdir)/vt_sync.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_sync.Tpo $(DEPDIR)/libvt_ompi_a-vt_sync.Po
#	source='vt_sync.c' object='libvt_ompi_a-vt_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_sync.obj `if test -f 'vt_sync.c'; then $(CYGPATH_W) 'vt_sync.c'; else $(CYGPATH_W) '$(srcdir)/vt_sync.c'; fi`

libvt_ompi_a-vt_omplock.o: vt_omplock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_omplock.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_omplock.Tpo -c -o libvt_ompi_a-vt_omplock.o `test -f 'vt_omplock.c' || echo '$(srcdir)/'`vt_omplock.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_omplock.Tpo $(DEPDIR)/libvt_ompi_a-vt_omplock.Po
#	source='vt_omplock.c' object='libvt_ompi_a-vt_omplock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_omplock.o `test -f 'vt_omplock.c' || echo '$(srcdir)/'`vt_omplock.c

libvt_ompi_a-vt_omplock.obj: vt_omplock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_omplock.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_omplock.Tpo -c -o libvt_ompi_a-vt_omplock.obj `if test -f 'vt_omplock.c'; then $(CYGPATH_W) 'vt_omplock.c'; else $(CYGPATH_W) '$(srcdir)/vt_omplock.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_omplock.Tpo $(DEPDIR)/libvt_ompi_a-vt_omplock.Po
#	source='vt_omplock.c' object='libvt_ompi_a-vt_omplock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_omplock.obj `if test -f 'vt_omplock.c'; then $(CYGPATH_W) 'vt_omplock.c'; else $(CYGPATH_W) '$(srcdir)/vt_omplock.c'; fi`

libvt_ompi_a-vt_ompreg.o: vt_ompreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_ompreg.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_ompreg.Tpo -c -o libvt_ompi_a-vt_ompreg.o `test -f 'vt_ompreg.c' || echo '$(srcdir)/'`vt_ompreg.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_ompreg.Tpo $(DEPDIR)/libvt_ompi_a-vt_ompreg.Po
#	source='vt_ompreg.c' object='libvt_ompi_a-vt_ompreg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_ompreg.o `test -f 'vt_ompreg.c' || echo '$(srcdir)/'`vt_ompreg.c

libvt_ompi_a-vt_ompreg.obj: vt_ompreg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_ompreg.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_ompreg.Tpo -c -o libvt_ompi_a-vt_ompreg.obj `if test -f 'vt_ompreg.c'; then $(CYGPATH_W) 'vt_ompreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_ompreg.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_ompreg.Tpo $(DEPDIR)/libvt_ompi_a-vt_ompreg.Po
#	source='vt_ompreg.c' object='libvt_ompi_a-vt_ompreg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_ompreg.obj `if test -f 'vt_ompreg.c'; then $(CYGPATH_W) 'vt_ompreg.c'; else $(CYGPATH_W) '$(srcdir)/vt_ompreg.c'; fi`

libvt_ompi_a-vt_pomp.o: vt_pomp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pomp.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pomp.Tpo -c -o libvt_ompi_a-vt_pomp.o `test -f 'vt_pomp.c' || echo '$(srcdir)/'`vt_pomp.c
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pomp.Tpo $(DEPDIR)/libvt_ompi_a-vt_pomp.Po
#	source='vt_pomp.c' object='libvt_ompi_a-vt_pomp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pomp.o `test -f 'vt_pomp.c' || echo '$(srcdir)/'`vt_pomp.c

libvt_ompi_a-vt_pomp.obj: vt_pomp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-vt_pomp.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-vt_pomp.Tpo -c -o libvt_ompi_a-vt_pomp.obj `if test -f 'vt_pomp.c'; then $(CYGPATH_W) 'vt_pomp.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-vt_pomp.Tpo $(DEPDIR)/libvt_ompi_a-vt_pomp.Po
#	source='vt_pomp.c' object='libvt_ompi_a-vt_pomp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-vt_pomp.obj `if test -f 'vt_pomp.c'; then $(CYGPATH_W) 'vt_pomp.c'; else $(CYGPATH_W) '$(srcdir)/vt_pomp.c'; fi`

libvt_ompi_a-pomp_fwrapper.o: $(OPARILIBDIR)/pomp_fwrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-pomp_fwrapper.o -MD -MP -MF $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Tpo -c -o libvt_ompi_a-pomp_fwrapper.o `test -f '$(OPARILIBDIR)/pomp_fwrapper.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper.c
	mv -f $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Tpo $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper.c' object='libvt_ompi_a-pomp_fwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-pomp_fwrapper.o `test -f '$(OPARILIBDIR)/pomp_fwrapper.c' || echo '$(srcdir)/'`$(OPARILIBDIR)/pomp_fwrapper.c

libvt_ompi_a-pomp_fwrapper.obj: $(OPARILIBDIR)/pomp_fwrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -MT libvt_ompi_a-pomp_fwrapper.obj -MD -MP -MF $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Tpo -c -o libvt_ompi_a-pomp_fwrapper.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper.c'; fi`
	mv -f $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Tpo $(DEPDIR)/libvt_ompi_a-pomp_fwrapper.Po
#	source='$(OPARILIBDIR)/pomp_fwrapper.c' object='libvt_ompi_a-pomp_fwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvt_ompi_a_CFLAGS) $(CFLAGS) -c -o libvt_ompi_a-pomp_fwrapper.obj `if test -f '$(OPARILIBDIR)/pomp_fwrapper.c'; then $(CYGPATH_W) '$(OPARILIBDIR)/pomp_fwrapper.c'; else $(CYGPATH_W) '$(srcdir)/$(OPARILIBDIR)/pomp_fwrapper.c'; fi`

.s.o:
	$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.lo:
	$(LTCCASCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
